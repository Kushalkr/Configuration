# ~/.bashrc: executed by bash(1) for non-login shells.
# see /usr/share/doc/bash/examples/startup-files (in the package bash-doc)
# for examples

# If not running interactively, don't do anything
[ -z "$PS1" ] && return

# don't put duplicate lines or lines starting with space in the history.
# See bash(1) for more options
HISTCONTROL=ignoreboth

# append to the history file, don't overwrite it
shopt -s histappend

# for setting history length see HISTSIZE and HISTFILESIZE in bash(1)
HISTSIZE=1000
HISTFILESIZE=2000

# check the window size after each command and, if necessary,
# update the values of LINES and COLUMNS.
shopt -s checkwinsize

# If set, the pattern "**" used in a pathname expansion context will
# match all files and zero or more directories and subdirectories.
#shopt -s globstar

# make less more friendly for non-text input files, see lesspipe(1)
[ -x /usr/bin/lesspipe ] && eval "$(SHELL=/bin/sh lesspipe)"

# set variable identifying the chroot you work in (used in the prompt below)
if [ -z "$debian_chroot" ] && [ -r /etc/debian_chroot ]; then
    debian_chroot=$(cat /etc/debian_chroot)
fi

# set a fancy prompt (non-color, unless we know we "want" color)
case "$TERM" in
    xterm-color) color_prompt=yes;;
esac

# uncomment for a colored prompt, if the terminal has the capability; turned
# off by default to not distract the user: the focus in a terminal window
# should be on the output of commands, not on the prompt
#force_color_prompt=yes

if [ -n "$force_color_prompt" ]; then
    if [ -x /usr/bin/tput ] && tput setaf 1 >&/dev/null; then
	# We have color support; assume it's compliant with Ecma-48
	# (ISO/IEC-6429). (Lack of such support is extremely rare, and such
	# a case would tend to support setf rather than setaf.)
	color_prompt=yes
    else
	color_prompt=
    fi
fi

if [ "$color_prompt" = yes ]; then
    PS1='${debian_chroot:+($debian_chroot)}\[\033[01;32m\]\u@\h\[\033[00m\]:\[\033[01;34m\]\w\[\033[00m\]\$ '
else
    PS1='${debian_chroot:+($debian_chroot)}\u@\h:\w\$ '
fi
unset color_prompt force_color_prompt

# If this is an xterm set the title to user@host:dir
case "$TERM" in
xterm*|rxvt*)
    PS1="\[\e]0;${debian_chroot:+($debian_chroot)}\u@\h: \w\a\]$PS1"
    ;;
*)
    ;;
esac

# enable color support of ls and also add handy aliases
if [ -x /usr/bin/dircolors ]; then
    test -r ~/.dircolors && eval "$(dircolors -b ~/.dircolors)" || eval "$(dircolors -b)"
    alias ls='ls --color=auto'
    #alias dir='dir --color=auto'
    #alias vdir='vdir --color=auto'

    alias grep='grep --color=auto'
    alias fgrep='fgrep --color=auto'
    alias egrep='egrep --color=auto'
fi

# some more ls aliases
alias ll='ls -alF'
alias la='ls -A'
alias l='ls -CF'

# Add an "alert" alias for long running commands.  Use like so:
#   sleep 10; alert
alias alert='notify-send --urgency=low -i "$([ $? = 0 ] && echo terminal || echo error)" "$(history|tail -n1|sed -e '\''s/^\s*[0-9]\+\s*//;s/[;&|]\s*alert$//'\'')"'

# Alias definitions.
# You may want to put all your additions into a separate file like
# ~/.bash_aliases, instead of adding them here directly.
# See /usr/share/doc/bash-doc/examples in the bash-doc package.

if [ -f ~/.bash_aliases ]; then
    . ~/.bash_aliases
fi

# enable programmable completion features (you don't need to enable
# this, if it's already enabled in /etc/bash.bashrc and /etc/profile
# sources /etc/bash.bashrc).
if [ -f /etc/bash_completion ] && ! shopt -oq posix; then
    . /etc/bash_completion
fi

alias ff='firefox' oku="nice -19 okular" gg='nice -19 google-chrome' update='sudo apt-get update' upgrade='sudo apt-get upgrade' gfort='gfortran' st='nice -19 sublime-text' vlc='vlc' matlab='nice -19 matlab' spyder='nice -19 spyder'
export NCARG_ROOT=/home/kushal/bin/ncl-6.3.0
export PATH=$NCARG_ROOT/bin:$HOME/Downloads/matlab_installed/bin:$HOME/bin:/usr/bin/:/opt/intel/bin:/home/kushal/Downloads/movies/sage-6.5-x86_64-Linux:/home/kushal/Downloads/grads_install/bin:/home/kushal/Downloads/netcdf_install/bin:/home/kushal/Downloads/ffmpeg-git-20150831-64bit-static:$PATH
source /usr/local/ferret/ferret_paths
export LD_LIBRARY_PATH=/usr/local/cuda-6.5/lib64:/home/kushal/Downloads/hdf5_install/lib:$LD_LIBRARY_PATH
#export TERM=xterm-256color
alias rm='rm -i'

alias panoply='nice -19 sh ~/Desktop/PanoplyJ/panoply.sh'
alias emacs='emacs -nw'
export GASCRP="/home/kushal/bin/grads-2.0.2/library /home/kushal/bin/grads-2.0.2/library/mygscripts"
export GADDIR=/home/kushal/bin/grads-2.0.2/data2
export PATH=/home/kushal/bin/grads-2.0.2/opengrads/grads-2.0.2.oga.2/Contents:$PATH
#export PATH=/home/kushal/bin/grads-2.1.a3/bin:$PATH
#alias pipup='sudo pip freeze --local | grep -v '^\-e' | cut -d = -f 1  | xargs sudo pip install -U'

##########################################################
#                  For CS50
##########################################################
alias make50='make CC=clang CFLAGS="-ggdb3 -O0 -std=c99 -Wall -Werror" LDLIBS="-lcs50 -lm"'
alias style50="~/cs50-tools/style50.jar"
alias check50="~/cs50-tools/check50/bin/check50"

#WRF
#export DIR=/home/kushal/Documents/WRF/LIBRARIES
#export PATH=$DIR/netcdf/bin:$PATH
#export NETCDF=$DIR/netcdf
#export PATH=$DIR/mpich/bin:$PATH
#export LDFLAGS=-L$DIR/grib2/lib 
#export CPPFLAGS=-I$DIR/grib2/include
#export JASPERINC=/home/kushal/Documents/WRF/LIBRARIES/grib2/include/jasper
#export JASPERLIB=/home/kushal/Documents/WRF/LIBRARIES/grib2/lib


# added by Miniconda2 3.19.0 installer
export PATH="/home/kushal/miniconda/bin:$PATH"
